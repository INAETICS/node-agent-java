#!/bin/bash

# Starts a node-agent-service with docker

ORGDIR=`pwd`
cd $(dirname $0)

source tools/build.sh
source tools/etcdctl.sh
source tools/docker.sh

SVC_AGENTID=$1
SVC_IMAGENAME="inaetics/node-agent:latest"
SVC_IMAGEREPO="https://github.com/INAETICS/node-agent-service"

if [ "$SVC_AGENTID" == "" ]; then
  echo "Missing AGENTID! Aborting..."
  exit 1
fi

clean_up () {
    docker stop node-agent-service > /dev/null 2>/dev/null
    docker rm node-agent-service >/dev/null 2>/dev/null
    cd $ORGDIR
    exit 0
}
trap clean_up SIGHUP SIGINT SIGTERM

echo "Looking for image: ${SVC_IMAGENAME}"
svcimage=$(docker/find_image $SVC_IMAGENAME)
if [ ! "$svcimage" == "" ]; then
  echo "Using local image $svcimage"
else
  echo "No local image found!.." 
  echo "Trying registries.." 
  registries=($(etcd/values /inaetics/docker-registry-service))
  svcimage=$(docker/pull_image $SVC_IMAGENAME "${registries[@]}")

  if [ ! "$svcimage" == "" ]; then
    echo "Using pulled image $svcimage"
  else
    echo "No upstream image found!.." 
    echo "Attempting local build.." 
    tmpdir=$(mktemp -d)
    git clone $SVC_IMAGEREPO $tmpdir
    builder/build_image $SVC_IMAGENAME $tmpdir
    svcimage=$(docker/find_image $SVC_IMAGENAME)

    if [ "$svcimage" == "" ]; then
      echo "Unable to locate or build image.... aborting!!" 1>&2
      exit 1
    fi
  fi
fi

provisioning_key=""
provisioning_value=""
while true; do

  if [ ! "$provisioning_key" == "" ]; then
    current_value=$(etcd/value $provisioning_key)
    if [ $? -gt 0 ] || [ ! "$current_value" == "$provisioning_value" ]; then
      echo "agent stop: provisioning lost: $provisioning_key"
      docker stop node-agent-service > /dev/null 2>/dev/null
      docker rm node-agent-service >/dev/null 2>/dev/null
      provisioning_key=""
      provisioning_value=""
    fi
  fi

  if [ "$provisioning_key" == "" ]; then
    current_keys=($(etcd/keys /inaetics/node-provisioning-service))
    if [ ${#current_keys[@]} -gt 0 ]; then
      provisioning_key=${current_keys[0]}
      provisioning_value=$(etcd/value $provisioning_key)
      echo "agent start: provisioning found: $provisioning_value"
      docker run --name node-agent-service -d -p 8080:8080 $svcimage \
        /tmp/node-agent.sh $SVC_AGENTID http://$provisioning_value
    fi
  fi

  if [ "$provisioning_key" != "" ]; then
    echo "agent running with provisioning $provisioning_value"
  else
    echo "agent waiting for provisiong sercvice.."
  fi

  sleep 10 &
  wait $!

done
